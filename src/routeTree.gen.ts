/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnAuthRouteRouteImport } from './routes/_un-auth/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as UnAuthSignInRouteImport } from './routes/_un-auth/sign-in'
import { Route as AuthPlayerIndexRouteImport } from './routes/_auth/player/index'
import { Route as AuthOperatorIndexRouteImport } from './routes/_auth/operator/index'
import { Route as AuthLaunchIndexRouteImport } from './routes/_auth/launch/index'
import { Route as AuthBrandIndexRouteImport } from './routes/_auth/brand/index'
import { Route as AuthOperatorCreateRouteImport } from './routes/_auth/operator/create'
import { Route as AuthPlayerShowIdRouteImport } from './routes/_auth/player/show.$id'

const UnAuthRouteRoute = UnAuthRouteRouteImport.update({
  id: '/_un-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const UnAuthSignInRoute = UnAuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => UnAuthRouteRoute,
} as any)
const AuthPlayerIndexRoute = AuthPlayerIndexRouteImport.update({
  id: '/player/',
  path: '/player/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthOperatorIndexRoute = AuthOperatorIndexRouteImport.update({
  id: '/operator/',
  path: '/operator/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLaunchIndexRoute = AuthLaunchIndexRouteImport.update({
  id: '/launch/',
  path: '/launch/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthBrandIndexRoute = AuthBrandIndexRouteImport.update({
  id: '/brand/',
  path: '/brand/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthOperatorCreateRoute = AuthOperatorCreateRouteImport.update({
  id: '/operator/create',
  path: '/operator/create',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthPlayerShowIdRoute = AuthPlayerShowIdRouteImport.update({
  id: '/player/show/$id',
  path: '/player/show/$id',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof UnAuthSignInRoute
  '/': typeof AuthIndexRoute
  '/operator/create': typeof AuthOperatorCreateRoute
  '/brand': typeof AuthBrandIndexRoute
  '/launch': typeof AuthLaunchIndexRoute
  '/operator': typeof AuthOperatorIndexRoute
  '/player': typeof AuthPlayerIndexRoute
  '/player/show/$id': typeof AuthPlayerShowIdRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof UnAuthSignInRoute
  '/': typeof AuthIndexRoute
  '/operator/create': typeof AuthOperatorCreateRoute
  '/brand': typeof AuthBrandIndexRoute
  '/launch': typeof AuthLaunchIndexRoute
  '/operator': typeof AuthOperatorIndexRoute
  '/player': typeof AuthPlayerIndexRoute
  '/player/show/$id': typeof AuthPlayerShowIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_un-auth': typeof UnAuthRouteRouteWithChildren
  '/_un-auth/sign-in': typeof UnAuthSignInRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/operator/create': typeof AuthOperatorCreateRoute
  '/_auth/brand/': typeof AuthBrandIndexRoute
  '/_auth/launch/': typeof AuthLaunchIndexRoute
  '/_auth/operator/': typeof AuthOperatorIndexRoute
  '/_auth/player/': typeof AuthPlayerIndexRoute
  '/_auth/player/show/$id': typeof AuthPlayerShowIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sign-in'
    | '/'
    | '/operator/create'
    | '/brand'
    | '/launch'
    | '/operator'
    | '/player'
    | '/player/show/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/'
    | '/operator/create'
    | '/brand'
    | '/launch'
    | '/operator'
    | '/player'
    | '/player/show/$id'
  id:
    | '__root__'
    | '/_auth'
    | '/_un-auth'
    | '/_un-auth/sign-in'
    | '/_auth/'
    | '/_auth/operator/create'
    | '/_auth/brand/'
    | '/_auth/launch/'
    | '/_auth/operator/'
    | '/_auth/player/'
    | '/_auth/player/show/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  UnAuthRouteRoute: typeof UnAuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_un-auth': {
      id: '/_un-auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnAuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_un-auth/sign-in': {
      id: '/_un-auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof UnAuthSignInRouteImport
      parentRoute: typeof UnAuthRouteRoute
    }
    '/_auth/player/': {
      id: '/_auth/player/'
      path: '/player'
      fullPath: '/player'
      preLoaderRoute: typeof AuthPlayerIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/operator/': {
      id: '/_auth/operator/'
      path: '/operator'
      fullPath: '/operator'
      preLoaderRoute: typeof AuthOperatorIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/launch/': {
      id: '/_auth/launch/'
      path: '/launch'
      fullPath: '/launch'
      preLoaderRoute: typeof AuthLaunchIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/brand/': {
      id: '/_auth/brand/'
      path: '/brand'
      fullPath: '/brand'
      preLoaderRoute: typeof AuthBrandIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/operator/create': {
      id: '/_auth/operator/create'
      path: '/operator/create'
      fullPath: '/operator/create'
      preLoaderRoute: typeof AuthOperatorCreateRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/player/show/$id': {
      id: '/_auth/player/show/$id'
      path: '/player/show/$id'
      fullPath: '/player/show/$id'
      preLoaderRoute: typeof AuthPlayerShowIdRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthOperatorCreateRoute: typeof AuthOperatorCreateRoute
  AuthBrandIndexRoute: typeof AuthBrandIndexRoute
  AuthLaunchIndexRoute: typeof AuthLaunchIndexRoute
  AuthOperatorIndexRoute: typeof AuthOperatorIndexRoute
  AuthPlayerIndexRoute: typeof AuthPlayerIndexRoute
  AuthPlayerShowIdRoute: typeof AuthPlayerShowIdRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthOperatorCreateRoute: AuthOperatorCreateRoute,
  AuthBrandIndexRoute: AuthBrandIndexRoute,
  AuthLaunchIndexRoute: AuthLaunchIndexRoute,
  AuthOperatorIndexRoute: AuthOperatorIndexRoute,
  AuthPlayerIndexRoute: AuthPlayerIndexRoute,
  AuthPlayerShowIdRoute: AuthPlayerShowIdRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface UnAuthRouteRouteChildren {
  UnAuthSignInRoute: typeof UnAuthSignInRoute
}

const UnAuthRouteRouteChildren: UnAuthRouteRouteChildren = {
  UnAuthSignInRoute: UnAuthSignInRoute,
}

const UnAuthRouteRouteWithChildren = UnAuthRouteRoute._addFileChildren(
  UnAuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  UnAuthRouteRoute: UnAuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
